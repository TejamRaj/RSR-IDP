// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSR.IDP.DbContexts;

namespace RSR.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20210624062740_InitialMigrationseedRoleClaim")]
    partial class InitialMigrationseedRoleClaim
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RSR.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Username")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Active = true, ConcurrencyStamp = "38f2eae5-5525-49f1-9530-250f56cc051f", Password = "password", Subject = "6cecd6ae-653a-42bd-bc7c-fd135c1aaddb", Username = "RedSoilNerd" },
                        new { Id = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Active = true, ConcurrencyStamp = "25a611fb-5b5a-4ee5-8f52-5743a01f80d4", Password = "password", Subject = "85ec1977-8471-439f-956c-5b2d0672f31e", Username = "RedSoilRock" },
                        new { Id = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Active = true, ConcurrencyStamp = "2e8e4727-4383-4545-9d95-a8b7c4c5bce2", Password = "password", Subject = "b1be83d4-31a3-4e57-beb4-d9c4b5e8abda", Username = "WorkplaceProvider" }
                    );
                });

            modelBuilder.Entity("RSR.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new { Id = new Guid("16cd0004-d15e-46f0-be68-72603ba6e277"), ConcurrencyStamp = "2ddacd82-b5cf-4777-8210-5cbb3d6e4d6c", Type = "given_name", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "RedSoilNerd" },
                        new { Id = new Guid("f1abd751-a6a0-48b7-a60a-e4857f7d6e88"), ConcurrencyStamp = "cf8c4367-12a6-4346-9e2d-040d3a5660fe", Type = "family_name", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "RedSoil" },
                        new { Id = new Guid("c9b336c3-e2dd-450a-ac14-3f418e836bfb"), ConcurrencyStamp = "c9440092-f918-493e-9073-ff70d4fdecde", Type = "address", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "Main Road 1" },
                        new { Id = new Guid("ffd28644-0041-4d57-9c18-040474d2c499"), ConcurrencyStamp = "c7f4af81-5fbb-4419-a502-4dc54863901f", Type = "subscriptionlevel", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "FreeUser" },
                        new { Id = new Guid("ab91ae3d-c813-404d-81d2-6b641a16020d"), ConcurrencyStamp = "d1fb9e1f-afbd-4bcb-afc8-44a105bc27be", Type = "country", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "India" },
                        new { Id = new Guid("c9b731d0-a3ef-4cd3-b833-1687f824c47f"), ConcurrencyStamp = "1ce7b068-2d35-4619-82db-918d64256a8c", Type = "role", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "Individual" },
                        new { Id = new Guid("e3859de0-44f7-49b4-b163-2e524f27ea03"), ConcurrencyStamp = "a17a1d99-651d-4d72-9c65-8d2052148af1", Type = "given_name", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "RedSoilRock" },
                        new { Id = new Guid("6667d0e6-bccf-4cfa-b554-5c18687ad711"), ConcurrencyStamp = "3f30738a-ac89-4716-b0c9-05cbfb2eeff3", Type = "family_name", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Orgnization" },
                        new { Id = new Guid("a9abe13b-e9ec-4050-b5cb-b4743480ab7f"), ConcurrencyStamp = "75a08e0a-4cdb-4446-838d-81a617f2216c", Type = "address", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Big Street 2" },
                        new { Id = new Guid("55901e87-1a12-49b3-8e2d-55174684ce97"), ConcurrencyStamp = "e39d7293-7f23-4195-9907-7cd8692b6a13", Type = "subscriptionlevel", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "AffilatedOrganization" },
                        new { Id = new Guid("88a551d8-4b18-4099-9576-f31adff6c6de"), ConcurrencyStamp = "5ae7a2d8-9708-49ee-8a98-6b68d8db713b", Type = "country", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "India" },
                        new { Id = new Guid("2f9b96bb-d58f-4037-b9e4-b2501c445a1a"), ConcurrencyStamp = "54a44e40-4009-41a1-afcf-d47824bdd036", Type = "role", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Orgnization" },
                        new { Id = new Guid("d53ae268-fea9-419d-9ec5-cb21b4b4fa2a"), ConcurrencyStamp = "0afd0755-ed14-452d-815c-8809235995a6", Type = "given_name", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "RedSoilOfficeWorkplace" },
                        new { Id = new Guid("1baf30f9-056c-4bd3-99ca-73e57ead3bc1"), ConcurrencyStamp = "62ac970c-6f4b-4c28-aff8-102424ea4a0e", Type = "family_name", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "test" },
                        new { Id = new Guid("cf01520a-274b-49bb-9878-d7df11eeb6c6"), ConcurrencyStamp = "c9ba55d3-9bdf-4a81-8675-c588004af467", Type = "address", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "Big Street 3" },
                        new { Id = new Guid("dd09c7ff-1b65-4c4c-8dc2-29f76e700f0e"), ConcurrencyStamp = "50560d2d-a40e-4aa1-8fd3-77399ad69535", Type = "subscriptionlevel", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "AffilatedWorkplaceProvider" },
                        new { Id = new Guid("c10f97d1-3edf-41ca-9797-84b68330ccde"), ConcurrencyStamp = "ca257d6e-2472-439f-8f7c-b4e23d4a5acb", Type = "role", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "WorkplaceProvider" }
                    );
                });

            modelBuilder.Entity("RSR.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("RSR.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
