// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSR.IDP.DbContexts;

namespace RSR.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20210623133923_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RSR.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Username")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Active = true, ConcurrencyStamp = "4dcf3007-75bd-4d11-8805-d32eda2f7b9b", Password = "password", Subject = "6cecd6ae-653a-42bd-bc7c-fd135c1aaddb", Username = "RedSoilNerd" },
                        new { Id = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Active = true, ConcurrencyStamp = "282273fb-73dd-49e5-a89a-17a5ecfa3110", Password = "password", Subject = "85ec1977-8471-439f-956c-5b2d0672f31e", Username = "RedSoilRock" },
                        new { Id = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Active = true, ConcurrencyStamp = "f8a56f63-70e6-4263-89ed-4902bcdf2810", Password = "password", Subject = "b1be83d4-31a3-4e57-beb4-d9c4b5e8abda", Username = "WorkplaceProvider" }
                    );
                });

            modelBuilder.Entity("RSR.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new { Id = new Guid("6aa75bd3-3b71-4c7e-af83-7937e41efc61"), ConcurrencyStamp = "b4752f3f-b82c-4fe0-845b-7028ffb0c8db", Type = "given_name", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "RedSoilNerd" },
                        new { Id = new Guid("4f00ed8d-afee-43f0-9a41-259c5b3549ec"), ConcurrencyStamp = "8112aeff-2168-43b3-9090-7a29036a1f92", Type = "family_name", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "RedSoil" },
                        new { Id = new Guid("ed656ddc-ab83-4bed-9b11-5a1ec47882c8"), ConcurrencyStamp = "5c5477dc-da43-4ad8-8548-4a6a90857da1", Type = "address", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "Main Road 1" },
                        new { Id = new Guid("98108ccd-588e-4abf-899c-f6fa9055d795"), ConcurrencyStamp = "59cf54c6-66bf-45c5-a800-f279bd7f92d8", Type = "subscriptionlevel", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "FreeUser" },
                        new { Id = new Guid("19595ce7-8f2e-4289-9a24-69575ef4cb6c"), ConcurrencyStamp = "f4d85ec0-fef7-478a-9a04-59defabe449b", Type = "country", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "India" },
                        new { Id = new Guid("0a854a26-e047-4bde-ae61-9f8adc7b2a45"), ConcurrencyStamp = "b7a80e02-0218-4d74-b1be-0ae58fd0a49a", Type = "given_name", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "RedSoilRock" },
                        new { Id = new Guid("f0995d51-8a45-4b01-b6ef-a3983db1c11d"), ConcurrencyStamp = "76130435-e864-4938-9afd-c879b2d6ed81", Type = "family_name", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Orgnization" },
                        new { Id = new Guid("68bdb943-895f-4838-af67-0ca7778ca75f"), ConcurrencyStamp = "6f18ef01-85a6-4228-8b88-849075e4f1ed", Type = "address", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Big Street 2" },
                        new { Id = new Guid("1966f789-bb41-4a2f-94d0-2376a7eb10d2"), ConcurrencyStamp = "e88e1d70-0405-4d93-a0f3-c92732078f39", Type = "subscriptionlevel", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "AffilatedOrganization" },
                        new { Id = new Guid("5e6132a9-3ecd-457f-8a3f-33f0a1df4318"), ConcurrencyStamp = "aa596f74-6971-4f68-a437-078df2cae7c5", Type = "country", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "India" },
                        new { Id = new Guid("ab1f758f-6352-48b6-97c8-a1eef6fd0402"), ConcurrencyStamp = "6bc6276c-aa7a-42c9-8254-9721ef51f15e", Type = "given_name", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "RedSoilOfficeWorkplace" },
                        new { Id = new Guid("8877a2bd-5ef5-49e3-a7ea-d3b8cb0fc440"), ConcurrencyStamp = "a899b498-2279-4916-8db8-c6fd764561a3", Type = "family_name", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "test" },
                        new { Id = new Guid("a91917ab-53b2-48a5-9565-4daf783f50e8"), ConcurrencyStamp = "81b12c7e-adee-49e0-abc1-33c9edc2c3d5", Type = "address", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "Big Street 3" },
                        new { Id = new Guid("d89f3f47-3f57-4df7-9d21-cc21edf55816"), ConcurrencyStamp = "97f26dcc-a6ee-4220-8b04-c97fafbd1d32", Type = "subscriptionlevel", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "AffilatedWorkplaceProvider" }
                    );
                });

            modelBuilder.Entity("RSR.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("RSR.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
