// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RSR.IDP.DbContexts;

namespace RSR.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20210624132820_addeEmailfiledinUserTable")]
    partial class addeEmailfiledinUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RSR.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<string>("SecurityCode")
                        .HasMaxLength(200);

                    b.Property<DateTime>("SecurityCodeExpirationDate");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Username")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Active = true, ConcurrencyStamp = "1d33c947-3f95-4cd3-aa91-b9595fdcb719", Password = "password", SecurityCodeExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Subject = "6cecd6ae-653a-42bd-bc7c-fd135c1aaddb", Username = "RedSoilNerd" },
                        new { Id = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Active = true, ConcurrencyStamp = "4730ec30-ea91-4bf3-a75e-089876a303ca", Password = "password", SecurityCodeExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Subject = "85ec1977-8471-439f-956c-5b2d0672f31e", Username = "RedSoilRock" },
                        new { Id = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Active = true, ConcurrencyStamp = "b8d59863-5f10-445c-990b-a42bd37c427d", Password = "password", SecurityCodeExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Subject = "b1be83d4-31a3-4e57-beb4-d9c4b5e8abda", Username = "WorkplaceProvider" }
                    );
                });

            modelBuilder.Entity("RSR.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new { Id = new Guid("f061d1ff-2394-4c22-96fa-8a03010bd5e8"), ConcurrencyStamp = "1dfa3b2c-29c2-4289-b006-146058a44916", Type = "given_name", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "RedSoilNerd" },
                        new { Id = new Guid("7db1208c-12e0-4a49-9d35-01d7b04e4f35"), ConcurrencyStamp = "064c63de-ae44-436a-8aea-e45025f25b5e", Type = "family_name", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "RedSoil" },
                        new { Id = new Guid("0d1ab26d-04c2-47f5-9e46-5a4c008914f0"), ConcurrencyStamp = "ec0b8cb2-6a98-46e2-804d-88d05ec929e5", Type = "address", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "Main Road 1" },
                        new { Id = new Guid("17b34db7-9cb8-441e-8cfc-6161896c1a5a"), ConcurrencyStamp = "ab4e93bf-d198-45dc-a181-1131efe89208", Type = "subscriptionlevel", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "FreeUser" },
                        new { Id = new Guid("20ce0fab-4373-484d-bc6d-4e49b1cd3461"), ConcurrencyStamp = "5b8bd617-ae06-4a4f-8903-7d4c3edaa944", Type = "country", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "India" },
                        new { Id = new Guid("ac120b5a-8b22-4d07-9d51-8cf43345d047"), ConcurrencyStamp = "5bf92a64-941a-48e1-968b-d5efcc2306fd", Type = "role", UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"), Value = "Individual" },
                        new { Id = new Guid("7c77fd6e-68e9-48dd-9c65-84fb2b926bd2"), ConcurrencyStamp = "7baa633b-5bec-4755-8624-f684a44b5fa3", Type = "given_name", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "RedSoilRock" },
                        new { Id = new Guid("5d68dc4c-1aa9-4f85-911e-3a7a1c8fef5a"), ConcurrencyStamp = "3da7d2b5-5bb0-4c2d-8408-2246144febb0", Type = "family_name", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Orgnization" },
                        new { Id = new Guid("e7074fc5-1b40-4da9-afbe-5b7315a813ba"), ConcurrencyStamp = "df8fcd2a-e0ed-4f47-ad1a-f0c3e28ffa7e", Type = "address", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Big Street 2" },
                        new { Id = new Guid("27038ced-1c55-4aae-b4e2-0cf0b7f10f2b"), ConcurrencyStamp = "a073e9bd-6f77-4e79-8318-4caa57fffae4", Type = "subscriptionlevel", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "AffilatedOrganization" },
                        new { Id = new Guid("bc1762a5-e0bb-4a33-a776-cf48a31e4a42"), ConcurrencyStamp = "3967d218-67a1-4260-987d-1daa042880db", Type = "country", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "India" },
                        new { Id = new Guid("7d5669dd-769f-4146-b4b9-bdcec1bf20fe"), ConcurrencyStamp = "51173848-b8a6-4d73-811e-fe59a9edd32b", Type = "role", UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"), Value = "Orgnization" },
                        new { Id = new Guid("59735c38-ed93-44a3-824d-fbfed3803af7"), ConcurrencyStamp = "0f6e7152-8222-4dd3-a8a9-f2ae244a1c66", Type = "given_name", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "RedSoilOfficeWorkplace" },
                        new { Id = new Guid("84a39d5d-832c-4556-8cf4-9b2dfb65e644"), ConcurrencyStamp = "257fd586-b934-4ec1-96ce-7d9b3203e119", Type = "family_name", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "test" },
                        new { Id = new Guid("f49b17af-c4bc-4d66-9df7-d217ebd59619"), ConcurrencyStamp = "b9e6f19a-8c46-4662-ae8d-0c4ebe92f9db", Type = "address", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "Big Street 3" },
                        new { Id = new Guid("9078c6ff-4bef-4561-b0f3-b8931b9148e3"), ConcurrencyStamp = "44f93878-6f5d-4cc5-903f-ce1470b7fc47", Type = "subscriptionlevel", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "AffilatedWorkplaceProvider" },
                        new { Id = new Guid("11d88392-4566-438e-ac4b-aba677848314"), ConcurrencyStamp = "1b624541-b5a6-42c0-8890-8369b359e764", Type = "role", UserId = new Guid("c7d1b5e8-ae26-41f7-90f8-4726bd722412"), Value = "WorkplaceProvider" }
                    );
                });

            modelBuilder.Entity("RSR.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("RSR.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
